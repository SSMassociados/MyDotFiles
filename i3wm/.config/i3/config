##########################################
#  DOTFILES -- I3CONFIG -- By: Sidiclei  #
##########################################

# ==> Default configuration: nano /etc/i3/config 
 
# ----------------------------------------------------------------------------
# SECTION 1: HELPFUL TOOLS AND DOCUMENTATION
# ----------------------------------------------------------------------------

# helpful cmdline tools:
#  * xev 
# ==> (Teclado)  xev | grep -i key 
# ==> (Mouse)    xev | grep button
#  * xbindkeys xbindkeys_config
#  * xbindkeys --key * xbindkeys --multikey
#  * xmodmap ou xmodmap -pke
#  * xprop ou xwininfo
#  * ==> Ordem=("INSTANCE","CLASS")xprop | grep WM_CLASS ou xprop WM_CLASS ou wmctrl -lx 

#shift          Shift_L (0x32),  Shift_R (0x3e)
#lock          Caps_Lock (0x42)
#control      Control_L (0x25),  Control_R (0x69)
#mod1        Alt_L (0x40),  Alt_L (0xcc),  Meta_L (0xcd)
#mod2        Num_Lock (0x4d)
#mod3        ISO_Level5_Shift (0xcb),  Hyper_L (0xcf)
#mod4        Super_L (0x85),  Super_R (0x86),  Super_L (0xce)
#mod5        ISO_Level3_Shift (0x5c) 

# ----------------------------------------------------------------------------
# SECTION 2: VARIABLES AND CONSTANTS
# ----------------------------------------------------------------------------

# Mod keys
set $win Mod4
set $alt Mod1

# Key binding modifiers
set $sup bindsym Mod4
set $ss bindsym Mod4+Shift
set $sc bindsym Mod4+Ctrl
set $ca bindsym Ctrl+Mod1
set $cs bindsym Ctrl+Shift
set $ct bindsym Ctrl+Tab
set $as bindsym Mod1+space

# Execution commands
set $exe exec --no-startup-id
set $always exec_always --no-startup-id

# Paths(usually '~/bin' or '~/.local/bin')
set $bin_path ~/.local/bin
set $scriptdir ~/.config/i3/scripts

# Direction keys
set $ukey Up
set $dkey Down
set $lkey Left
set $rkey Right

# Display outputs
# Define Workspaces and screens ==> monitor outputs ==> xrandr -q | grep " connected" | cut -d ' ' -f1
set $out_pri output eDP1
set $out_sec output HDMI1

# Window Management
set $float floating enable
set $nofloat floating disable
set $center move position center
set $full fullscreen enable
set $scra move scratchpad
set $show scratchpad show
set $to move to workspace

# Comando para bloquear a tela
set $lockscreen 'betterlockscreen -u ~/.wallpaper -l dim'

# # Terminal configurations
set $term exec --no-startup-id kitty
set $term_drop exec --no-startup-id xfce4-terminal --drop-down
#set $term_theme exec --no-startup-id env GTK_THEME=Arc-Dark xfce4-terminal

# Default mail client
#set $mail ~/bin/launcher-thunderbird

# ----------------------------------------------------------------------------
# SECTION 3: APPEARANCE AND THEMING
# ----------------------------------------------------------------------------

# Fonts
font pango:SF Pro Display Regular 13
#font pango:JetBrains Mono:style=Regular:pixelsize=13
#font pango:Cantarell:style=Bold:pixelsize=11
#font pango:Source Sans Pro 12
#font pango:Open Sans Semibold 10
#font pango:Font Awesome 5 Free,Font Awesome 5 Free Solid:style=Solid
#font pango:Iosevka Custom 11
#font pango:monospace 8
#font pango:FiraCode 8
#font pango:Fantasque Sans Mono 8
#font pango:Poppins 8
#font pango:DejaVu Sans Mono 8
#font pango:Noto Sans 12

# Window Borders and Focus
for_window [class="^.*" title="^.*"] border pixel 3
hide_edge_borders smart
title_align center
focus_on_window_activation smart
default_border pixel 4
default_floating_border normal
focus_wrapping yes
#focus_follows_mouse yes
mouse_warping output

# Icon Variables (Font Awesome)
set $ico_bank <span font='Font Awesome'>&#xf155;</span>       #  Bank
set $ico_chat <span font='Font Awesome'>&#xf27b;</span>       #  Chat
set $ico_chrome <span font='Font Awesome'>&#xf268;</span>     #  Chrome
set $ico_code <span font='Font Awesome'>&#xf121;</span>       #  Code
set $ico_document <span font='Font Awesome'>&#xf0f6;</span>   #  Document
set $ico_editor <span font='Font Awesome'>&#xf044;</span>     #  Editor
set $ico_email <span font='Font Awesome'>&#xf003;</span>      #  Email
set $ico_firefox <span font='Font Awesome'>&#xf269;</span>    #  Firefox
set $ico_folder <span font='Font Awesome'>&#xf115;</span>     #  Folder
set $ico_github <span font='Font Awesome'>&#xf09b;</span>     #  GitHub
set $ico_hangouts <span font='Font Awesome'>&#xf10e;</span>   #  Hangouts
set $ico_menu <span font='Font Awesome'>&#xf0c9;</span>       #  Menu
set $ico_monitor <span font='Font Awesome'>&#xf26c;</span>    #  Monitor
set $ico_music <span font='Font Awesome'>&#xf001;</span>      #  Music
set $ico_news <span font='Font Awesome'>&#xf09e;</span>       #  News
set $ico_package <span font='Font Awesome'>&#xf1c6;</span>    #  Package
set $ico_play <span font='Font Awesome'>&#xf01d;</span>       #  Play
set $ico_table <span font='Font Awesome'>&#xf0ce;</span>      #  Table
set $ico_telegram <span font='Font Awesome'>&#xf1d9;</span>   #  Telegram
set $ico_terminal <span font='Font Awesome'>&#xf120;</span>   #  Terminal
set $ico_video <span font='Font Awesome'>&#xf008;</span>      #  Video
set $ico_volume <span font='Font Awesome'>&#xf028;</span>     #  Volume
set $ico_whatsapp <span font='Font Awesome'>&#xf232;</span>   #  WhatsApp
set $ico_window <span font='Font Awesome'>&#xf2d0;</span>     #  Window

# Base colors
set $darker     #080910
set $dark       #181920
set $black      #2F343F
set $darkgray   #3B4252
set $gray       #E7E8EB
set $white      #F5F6F7
set $red        #BF616A
set $orange     #DBAB6B
set $yellow     #EBCB8B
set $green      #A3BE8C
set $cyan       #88C0D0
set $blue       #91B1D1
set $darkblue   #416181
set $purple     #B48EAD
set $SandyBrown #F4A460

# Window Border color
# class                   border  backgr  text       indicator  child_border
#client.focused           $black  $black  $blue      $cyan      $SandyBrown
#client.unfocused         $darker $darker $darkblue  $cyan      $darker
#client.focused_inactive  $dark   $dark   $darkblue  $cyan      $dark
#client.urgent            $red    $red    $dark      $cyan      $red


# COLORS (Xresources integration)
# Uses colors from ~/.Xresources (fallback to #f0f0f0 if not found)
# Docs: https://i3wm.org/docs/userguide.html#xresources

# Cores Base (Nord-inspired)
# Texto principal
set_from_resource $fg           i3wm.color7  #f3f4f5 
# Fundo principal  
set_from_resource $bg           i3wm.color3  #2E3440
# Destaque ativo    
set_from_resource $id           i3wm.color15 #D8DEE9   

# Estados Especiais (Extended)
# Elementos inativos
set_from_resource $inactive     i3wm.color8 #676E7D 
# Urgências   
set_from_resource $urgent       i3wm.color1 #E53935    

# Window Color Configuration
# Format:               border    backgr    text      indicator  child_border
client.focused          $bg       $bg       $fg       $id        $bg
client.focused_inactive $bg       $bg       $inactive $bg        $bg
client.unfocused        $inactive $bg       $inactive $bg        $bg
client.urgent           $urgent   $urgent   $fg       $bg        $urgent
client.placeholder      $bg       $bg       $fg       $bg        $bg
client.background       $bg

# ----------------------------------------------------------------------------
# SECTION 4: WINDOW MANAGEMENT
# ----------------------------------------------------------------------------

# Configurações Gerais
# ==> Para descobrir a classe e instância de sua janela, execute 
#     "xprop | grep WM_CLASS" ou "xprop WM_CLASS" ou "xwininfo"  no terminal, 
#     em seguida clique na janela que deseja flutuar. Isso lhe dará as propriedades da janela.
# ==> "wmctrl -lx" não precisa clicar na janela

# ==> WM_CLASS(STRING) = "instance_name", "class_name"
# ==> Olhe para o WM_CLASS(STRING) = "Navigator", "firefox". 
#     O primeiro elemento é sempre o INSTANCE, o segundo sempre o CLASS.
#     Estrutura do WM_CLASS
# ==> Instance: identifica a instância específica do aplicativo. Por exemplo, você pode 
#     ter várias janelas do Firefox, cada uma com uma instance diferente.
# ==> Class: identifica o tipo geral ou a classe do aplicativo. Normalmente, essa é a 
#     mesma para todas as janelas de uma aplicação (por exemplo, "Firefox" para todas as janelas do Firefox).

# ==> xprop | grep -E "WM_NAME|WM_WINDOW_ROLE|_NET_WM_WINDOW_TYPE|WM_CLASS"

# ==> WM_CLASS: identifica a instancia e a classe da janela
# ==> WM_NAME(STRING): representa o título da janela.
# ==> WM_WINDOW_ROLE(STRING): representa uma função específica da janela (nem todos os aplicativos definem essa propriedade).
# ==> _NET_WM_WINDOW_TYPE(ATOM): representa o tipo de janela. Isso pode incluir tipos como dialog, utility, toolbar, etc.

# ==> O operador |(pipe) funciona em algumas propriedades (como class ou instance), mas não em window_type.

# [FLOATING RULES] --------------------------------------

# Janelas de diálogo, menus e utilitários devem sempre flutuar
for_window [window_type="Dialog"] $float
for_window [window_type="Menu"] $float
for_window [window_type="Utility"] $float

# Janelas com roles específicos (normalmente diálogos secundários)
for_window [window_role="pop-up|bubble|app|page-info|task_dialog|Preferences|About"] $float
for_window [window_role="Picture-In-Picture"] $float
for_window [window_role="GtkFileChooserDialog|Dialog|DIALOG"] $float

# Janelas identificáveis pelo título
for_window [title="Authy|Preferences$|Progresso$"] $float
for_window [title="Picture-in-Picture"] sticky enable $show
for_window [title=".*QEMU/KVM$"] $nofloat
for_window [title="Nova VM"] $float, $center

# System Tools
for_window [class="Yad" title="Calendar"] $float
for_window [class="Psensor"] $float, resize set 450 590
for_window [class="KeePassXC"] $float, resize set 800 500, $center
for_window [class="Arandr"] $float, resize set 280 254
for_window [class="pavucontrol|easyeffects"] $float, resize set 650 410
for_window [class="Gnome-calculator"] $float, resize set 100 300, $center
for_window [class="xdman-Main"] $float, move position 1620 1010, resize set 759 419
for_window [class="Xdm-app"] $float, move position 1620 1010, resize set 250 40
for_window [class="Blueman-manager|Blueman-services|System-config-printer|simple-scan|Gufw.py|Key-mapper-gtk"] $float

# Messaging Apps
for_window [class="TelegramDesktop|WhatSie|qtwaw|ZapZap|whatsdesk|Whatsapp-for-linux"] $float, border none, resize set 910 512, $center

# Media Applications
for_window [class="zoom"] $float, resize set 200 480, $center
for_window [class="smplayer|vlc|amberol|Audacity|qBittorrent"] $float
for_window [class="qvidcap"] $float, sticky enable, resize set 335 250

#  File Managers and Browsers
for_window [instance="Places|firefox"] $float, resize set 660 363, $center
for_window [instance="Navigator"] focus
for_window [instance="pcmanfm|Thunar|nautilus"] focus
for_window [instance="atril|evince"] focus
for_window [instance="geany"] $center focus

# Special Cases
for_window [instance="gl"] focus, $full
for_window [instance="et|wps"] focus
for_window [instance="spotify"] focus
for_window [class="floating_window"] $float
for_window [class="Tk|Toplevel|Bell_scheduler_gui.py"] $float
#for_window [instance="anydesk"] $scra

for_window [class="BatteryPopup"] $float, border pixel 1, move position center, sticky enable
for_window [class="Alarm-clock-applet|scrcpy"] $float

# ----------------------------------------------------------------------------
# SECTION 5: WORKSPACES
# ----------------------------------------------------------------------------

set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

#        ♫  

#set $ws1  "1: "
#set $ws2  "2: "
#set $ws3  "3: "
#set $ws4  "4: "
#set $ws5  "5: "
#set $ws6  "6: "
#set $ws7  "7: "
#set $ws8  "8: "
#set $ws9  "9: "
#set $ws10 "10:"

# Assign workspaces to outputs
workspace $ws1  $out_pri
workspace $ws2  $out_pri
workspace $ws3  $out_pri
workspace $ws4  $out_pri
workspace $ws5  $out_pri
workspace $ws6  $out_sec
workspace $ws7  $out_sec
workspace $ws8  $out_sec
workspace $ws9  $out_sec
workspace $ws10 $out_sec

# Switch to workspace
$sup+1 workspace number $ws1
$sup+2 workspace number $ws2
$sup+3 workspace number $ws3
$sup+4 workspace number $ws4
$sup+5 workspace number $ws5
$sup+6 workspace number $ws6
$sup+7 workspace number $ws7
$sup+8 workspace number $ws8
$sup+9 workspace number $ws9
$sup+0 workspace number $ws10

# Move container to workspace
$ss+1 move container to workspace number $ws1
$ss+2 move container to workspace number $ws2
$ss+3 move container to workspace number $ws3
$ss+4 move container to workspace number $ws4
$ss+5 move container to workspace number $ws5
$ss+6 move container to workspace number $ws6
$ss+7 move container to workspace number $ws7
$ss+8 move container to workspace number $ws8
$ss+9 move container to workspace number $ws9
$ss+0 move container to workspace number $ws10

# Workspace navigation
$ca+Right workspace next
$ca+Left workspace prev
$ct workspace next
$cs+Tab workspace prev
workspace_auto_back_and_forth yes
$sup+k urgent clear

# Polybar toggle, hide or show 
$sup+o $exe polybar-msg cmd toggle 

# I3 bar toggle, hide or show
#$sup+o bar mode toggle
#$sup+i bar mode invisible

# Urgent workspace handling
for_window [urgent=latest] focus
for_window [title="error"] urgent set

# Layout padrão workspace <default|stacking|tabbed>
#workspace_layout tabbed

# Orientation for new workspaces (horizontal|vertical|auto)
default_orientation auto

# Multi-monitor workspace control ==> Move
$cs+Right move workspace to output right
$cs+Left  move workspace to output left
$cs+Up    move workspace to output next

# Assign applications to workspaces
assign [class="firefox"] $ws1
assign [class="Pcmanfm|Thunar|nautilus"] $ws2
assign [class="Atril|Evince"] $ws3
assign [class="Geany"] $ws4
assign [class="mpv"] $ws5
assign [class="Virt-manager"] $ws6
assign [class="wps"] $ws8
assign [class="et"] $ws9
assign [class="Spotify"] $ws10

# ----------------------------------------------------------------------------
# SECTION 6: KEY BINDINGS - SYSTEM
# ----------------------------------------------------------------------------

### SUBSECTION 6.1: SYSTEM BINDINGS ###
# Controles globais do sistema e gerenciamento de sessão

# [SESSION CONTROL] --------------------------------------
# Reinicia o i3 (preserva sessão)
$ss+r restart
# Recarrega configuração e notifica
$ss+c reload exec notify-send "Reloaded i3 config."
# Sai do i3 (volta para login manager)
$ss+e $exe i3-msg exit
# Desligamento imediato
$ss+d $exe shutdown -h now
# Power Menu
$sup+d $exe ~/.config/rofi/powermenu/type-2/powermenu.sh 
# ==> $ss+p $exe polybar-msg hook powermenu 1
# Reinicia o sistema     
$ss+b $exe systemctl reboot
# Suspende o sistema    
$ss+s $exe systemctl suspend   
# Dual boot: reinicia no Windows
$ss+w $exe sudo grub-reboot 2 && reboot
# Bloquear Tela
$sup+l $exe $scriptdir/random_wallpaper_betterlockscreen.sh

# [SYSTEM TOOLS] -----------------------------------------
# Alternar monitores >>> SUP+FN+F8
bindsym Mod2+Mod4+Super_L $exe $scriptdir/toggle_mons.sh
# Ligar/desligar compositor
$sup+F4 $exe $scriptdir/toggle_picom.sh 
# Testar notificações 
$ss+t $exe $scriptdir/restart_test_dunst.sh 
# Gerenciador de inatividade 
$ss+x $exe $scriptdir/toggle_xidlehook.sh 
# Ajuda do i3 
$sc+h exec xdg-open https://i3wm.org/docs/userguide.html
# Edição I3 Config  
$sup+Home $exe geany ~/.config/i3/config
# Edição Polybar Config
$sup+End $exe geany ~/.config/polybar/config.ini

# ==> Windows
# sudo grep menuentry /boot/grub/grub.cfg    
# sudo EDITOR=nano visudo
# Same thing without a password
# %wheel ALL=(ALL) NOPASSWD:/usr/bin/grub-reboot

# [FILE EDITING MODE] -----------------------------------------
$sup+apostrophe mode "$mode_files"
set $mode_files [I]3, [P]oly, [K]itty, [B]etterloc, [D]unst, [O]picom, [Z]sh, [F]eh, [N]vim, [T]zathura, [S]amba
mode "$mode_files" {
    bindsym i $term -e nvim ~/.config/i3/config, mode "default"
    bindsym p $term -e nvim ~/.config/polybar/config.ini, mode "default"
    bindsym k $term -e nvim ~/.config/kitty/kitty.conf, mode "default"
    bindsym b $term -e nvim ~/.config/betterlockscreenrc, mode "default"
    bindsym d $term -e nvim ~/.config/dunst/dunstrc, mode "default"
    bindsym o $term -e nvim ~/.config/picom/picom.conf, mode "default"
    bindsym f $term -e nvim ~/.config/feh/themes, mode "default"
    bindsym z $term -e nvim ~/.zshrc, mode "default"
    bindsym n $term -e nvim ~/.config/nvim/init.vim, mode "default" 
    bindsym t $term -e nvim ~/.config/zathura/zathurarc, mode "default"
    bindsym s exec $term -e nvim /etc/samba/smb.conf; mode "default"
    bindsym Escape mode "default"
}

# [SCREEN OPERATIONS] ------------------------------------
# Captura de tela (Mod4 = Super/Windows key):
# Área selecionada
bindsym --release Mod4+Print $exe QT_QPA_PLATFORM=xcb flameshot gui
# Tela inteira  
bindsym --release Print $exe cd ~/Imagens/Screenshots/ && scrot 
# Janela selecionada 
bindsym --release Shift+Print $exe cd ~/Imagens/Screenshots/ && scrot -s -b  

# Screen recording
$sup+g $exe $scriptdir/launch_ssrecorder.sh &  
#$sup+g $exe simplescreenrecorder --start-hidden

# OCR and QR tools
bindsym $alt+o $exe $scriptdir/image_to_text.sh
bindsym $alt+q $exe $scriptdir/code_to_link.sh

### SUBSECTION 6.2: APPLICATION BINDINGS ###
# Lançadores de aplicativos e controles específicos
# Mapeamento de teclas xmodmap -pke ou xev | grep -i key

# [TERMINALS] --------------------------------------------
# Terminal principal
$sup+Return $exe kitty
# Terminal flutuante  
bindsym F1 $exe $scriptdir/draw_window.sh
# Terminal rápido - (~/.config/i3/i3-quickterm.json)  
bindsym F2 $exe i3-quickterm shell  

# [BROWSERS] ---------------------------------------------
$sup+f $exe firefox
$sup+b $exe "pkill brave || brave"
$sup+c $exe google-chrome-stable
#$sup+w $exe librewolf
#$sup+v $exe vivaldi-stable
$cs+q $exe "pkill qutebrowser || qutebrowser"
$ca+t  $exe firefox https://outlook.live.com/mail/0/ https://mail.google.com/mail/u/1/?ogbl#inbox https://www.siepe.educacao.pe.gov.br/
$sup+m $exe google-chrome-stable -url meet.google.com/svc-vasq-drv

# [FILE MANAGEMENT] ---------------------------------------
$sup+x $exe "killall Thunar || Thunar"  
$sup+r $exe "pkill ranger || kitty -e 'ranger'"

# [UTILITIES] --------------------------------------------
# Integração com Android
$sup+backslash $exe $scriptdir/launch_kdeconnect.sh &
# Bluetooth  
$sc+b $exe "pkill blueman-applet || blueman-applet"
# Launcher (Alt+Space)  
$as $exe ~/.config/rofi/launchers/type-1/launcher.sh
 
#$sup+d $exe dmenu_run  # Start dmenu (a program launcher)

# Agendador - bell_scheduler_gui
bindsym F11 exec "pkill -f bell_scheduler_gui.py; python3 ~/.config/i3/scripts/bell_scheduler_gui.py"  

# Alarme
$sup+a $exe $scriptdir//toggle_alarm.sh 

# start/close Calculadora 
bindsym F6 $exe $scriptdir/launch_calculadora.sh &  
bindsym XF86Calculator $exe $scriptdir/launch_calculadora.sh &

# Launch Search 
$sup+z $exe $scriptdir/search.py "$HOME/Área de trabalho/AUSTRO/DECLARAÇÕES/Banco de Dados/TXT_Output/CSV_Output/dados_unificados.csv"

# Start/close Spotify
bindsym F9 $exe $scriptdir/launch_spotify.sh &
bindsym XF86Tools $exe $scriptdir/launch_spotify.sh &

# Discovers automatically all UPnP AV Media Servers on the network, 
# and make the content available in a directory tree
# sudo mkdir -p /media/upnp && sudo groupadd fuse && sudo usermod -aG fuse $USER && sudo chown $USER:$USER /media/upnp
#$exe sleep 15 && sudo djmount -o allow_other /media/upnp
#$exe djmount -o allow_other /media/upnp
bindsym F5 $exe $scriptdir/toggle_djmount.sh

# Gnirehtet (Reverse Tethering) ==> yay -S gnirehtet
bindsym F7 $exe $scriptdir/toggle_gnirehtet.sh

# AutoAdb + Scrcpy
# ==> AutoAdb Executar automaticamente qualquer comando assim que um dispositivo for conectado via adb. 
# ==> Scrcpy espelha dispositivos Android (vídeo e áudio) conectados via USB ou sobre TCP/IP , e controlar 
# Encontrar o serial do dispositivo: ==> autoadb printf 'Device %s connected\n' '{}' ou adb devices
# ==> M=Mouse K=Keyboard S=DesligarTela t=MostrarToques w=NãoHibernar r=Record s=SerialDispositivo
#$exe /usr/bin/autoadb scrcpy -MKSts 6bb1a8f7 &
#$exe $scriptdir/autoadb_scrcpy.sh &
bindsym F8 $exe $scriptdir/toggle_scrcpy.sh

# Simula o pressionamento de ctrl+v ao pressionar $mod+x
#bindsym --release $sup+x $exe xdotool key --clearmodifiers ctrl+v

### SUBSECTION 6.3: MEDIA BINDINGS ###
# Controles de mídia e hardware

# [VOLUME CONTROL] ---------------------------------------
# Atualizar barra de status
set $vol_signal pkill -SIGRTMIN+10 i3blocks 
# ↑ Volume (+10%) 
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +10% && $vol_signal 
# ↓ Volume (-10%) 
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -10% && $vol_signal
# Mute/Unmute  
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && $vol_signal  

# [MICROPHONE] -------------------------------------------
# Mute/Unmute microfone
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle  

# [MEDIA PLAYBACK] ---------------------------------------
# Play/Pause dual-function
bindsym XF86AudioPlay exec playerctl play-pause
# Parar  
bindsym XF86AudioStop exec playerctl stop
# Próxima faixa        
bindsym XF86AudioNext exec playerctl next
# Faixa anterior        
bindsym XF86AudioPrev exec playerctl previous    

# [BRIGHTNESS] -------------------------------------------
# + Brilho
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 
# - Brilho   
bindsym XF86MonBrightnessDown exec xbacklight -dec 20  

### SUBSECTION 6.4: WINDOW MANAGEMENT BINDINGS ###
# Controle de janelas e layouts

# [FOCUS NAVIGATION] -------------------------------------
# Mover foco ←
$sup+$lkey focus left
# Mover foco ↓   
$sup+$dkey focus down
# Mover foco ↑   
$sup+$ukey focus up
# Mover foco →     
$sup+$rkey focus right
# Container pai  
$sup+Prior focus parent
# Container filho 
$sup+Next focus child   

# Alt+Tab Focus >>> yay -S alttab
#$exe ~/.config/i3/scripts/alttab_pywal.sh

# Switch container focus i3-cycle - conflito com o alttab
# Rotação horária entre janelas
#$sup+Tab		$exe i3-cycle right
# Rotação anti-horária (Mod4+Shift+Tab) 
# $ss+Tab		$exe i3-cycle left  

# Easyfocus >>> yay -S wmfocus - # Mostra letras/números grandes para navegação rápida via teclado
#$ct exec "wmfocus -f Mono:80"  

# [WINDOW MOVEMENT] --------------------------------------
# Mover janela ←
$ss+$lkey move left 
# Mover janela ↓  
$ss+$dkey move down 
# Mover janela ↑  
$ss+$ukey move up
# Mover janela →     
$ss+$rkey move right
# Centralizar janela  
$ss+h $center         

# [RESIZE CONTROLS] --------------------------------------
# → Aumenta largura
$sc $rkey resize grow width 5 px or 5 ppt
# ← Diminui largura   
$sc $lkey resize shrink width 5 px or 5 ppt
# ↑ Aumenta altura   
$sc $ukey resize grow height 5 px or 5 ppt
# ↓ Diminui altura  
$sc $dkey resize shrink height 5 px or 5 ppt  

# [LAYOUT CONTROL] ---------------------------------------

# ==> LAYOUTS PRINCIPAIS
$sup+s layout stacking; exec notify-send 'Stacking ~ Empilhadas'
$sup+w layout tabbed; exec notify-send 'Tabbed ~ Guias'
$sup+e layout toggle split; exec notify-send 'Split ~ H/V'
# Alternativa as 3 configs acima
$sup+Tab layout toggle all

# ==> AJUSTES DE SPLIT
# Divisão horizontal
$sup+h focus left, split h; exec notify-send 'Tile horizontally'
# Divisão vertical 
$sup+v focus up, split v; exec notify-send 'Tile vertically' 
# Alternar divisão H/V - Curso na janela    
$sup+semicolon split toggle
# Alternar orientação  
$sup+slash layout toggle splitv splith  

# [WINDOW STATES] ----------------------------------------
# Alternar modo flutuante - period=ponto
$sup+period floating toggle
# Alternar foco entre tiling/flutuante - comma=vírgula   
$sup+comma focus mode_toggle 
# Alternar bordas
$sup+t border toggle
# Esconder janela (scratchpad)          
$sup+minus $scra
# Mostrar janela oculta             
$sup+equal $show 
# Alternar sticky (visível em todos workspaces)            
$ca+s sticky toggle  
# Focar janela urgente        
$sup+u [urgent=latest] focus 
# Tela cheia
$sup+F11 fullscreen toggle
# smart|ignore|leave_fullscreen  
popup_during_fullscreen smart 

# Fecha janela ativa (Mod4+q)
# Fecha TODAS janelas (Mod4+Shift+q) - CUIDADO!
$sup+q kill                    
$ss+q [class=".*"] kill 
# Fechar seletivo (Ctrl+Mod4+Del) → cursor em X       
$sc+Delete --release $exe xkill
# Mata processos travados  
$sup+Escape $exe pkill -9 -f "(crash|not responding)"  

# ----------------------------------------------------------------------------
# SECTION 7: MOUSE BINDINGS
# ----------------------------------------------------------------------------

# Mouse(Mapeamento xev) ==> Se você não sabe o número do botão do mouse: xev | grep button
# Botões laterais= 8 e 9 - scroll direita/esquerda= 6 e 7 - rolagem cima/baixo= 4 e 5

# Modifier key ALT para arrastar janelas flutuantes
floating_modifier $alt  

# [WINDOW OPERATIONS] --------------------------------------
# Botão meio (barra título) → fecha janela
bindsym --release button2 kill 
# Mod4 + botão meio → força fechar          
bindsym --whole-window $win+button2 kill
# Mod4 + botão direito → alterna flutuante 
$sup+button3 --whole-window floating toggle  

# [WINDOW MOVEMENT] --------------------------------------
# Botões de rolagem lateral (mapeados via xev):
# Scroll esquerdo → move janela ←
bindsym --whole-window button6 move left
# Scroll direito → move janela →   
bindsym --whole-window button7 move right  

# Configurações alternativas comentadas:
# Arrasto das janelas pelo título (experimental)
# tiling_drag modifier titlebar  

# ----------------------------------------------------------------------------
# SECTION 8: NOTIFICATION CONTROLS (Dunst)
# ----------------------------------------------------------------------------

# [BASIC CONTROLS] --------------------------------------
# Fecha notificação atual
bindsym Ctrl+space              $exe dunstctl close   
# Limpa todas notificações      
bindsym Ctrl+Shift+space        $exe dunstctl close-all     

# [HISTORY CONTROLS] --------------------------------------
# Mostra última notificação
bindsym Ctrl+comma             $exe dunstctl history-pop
# Abre contexto/link (.)    
bindsym Ctrl+period            $exe dunstctl context        

# [ADVANCED CONTROLS (commented examples)] --------------------------------------
# Lista histórico completo
# bindsym Ctrl+Shift+comma     $exe dunstctl history 
# Executa ação associada      
# bindsym Ctrl+Shift+period    $exe dunstctl action       

# ----------------------------------------------------------------------------
# SECTION 9: GAPS AND BORDERS
# ----------------------------------------------------------------------------

gaps inner 4
gaps outer 1
#smart_gaps on

#smart_borders on
#smart_borders no_gaps
#border_radius 2

#set $mode_gaps Gaps: (o) outer, (i) inner
#set $mode_gaps_outer Outer Gaps: +|-|0|d (local), Shift + +|-|0|d (global)
#set $mode_gaps_inner Inner Gaps: +|-|0|d (local), Shift + +|-|0|d (global)
#$ss+g mode "$mode_gaps"

#mode "$mode_gaps" {
#       bindsym o      mode "$mode_gaps_outer"
#       bindsym i      mode "$mode_gaps_inner"
#       bindsym Return mode "default"
#       bindsym Escape mode "default"
#}

#mode "$mode_gaps_inner" {
#       bindsym plus  gaps inner current plus 5
#       bindsym minus gaps inner current minus 5
#       bindsym 0     gaps inner current set 0

#       bindsym Shift+plus  gaps inner all plus 5
#       bindsym Shift+minus gaps inner all minus 5
#       bindsym Shift+0     gaps inner all set 0

#       bindsym d gaps inner current set $gaps_inner_default, mode "default"
#       bindsym Shift+d gaps inner all set $gaps_inner_default, mode "default"

#       bindsym Return mode "default"
#       bindsym Escape mode "default"
#}

#mode "$mode_gaps_outer" {
#       bindsym plus  gaps outer current plus 5
#       bindsym minus gaps outer current minus 5
#       bindsym 0     gaps outer current set 0

#       bindsym Shift+plus  gaps outer all plus 5
#       bindsym Shift+minus gaps outer all minus 5
#       bindsym Shift+0     gaps outer all set 0

#       bindsym d gaps outer current set $gaps_outer_default, mode "default"
#       bindsym Shift+d gaps outer all set $gaps_outer_default, mode "default"

#       bindsym Return mode "default"
#       bindsym Escape mode "default"
#}

# ----------------------------------------------------------------------------
# STATUS BAR
# ----------------------------------------------------------------------------

#bar {        
#        $out_pri
#        position top
#        wheel_up_cmd nop
#        wheel_down_cmd nop
#        tray_padding 4

#        mode dock

#        mode hide
#        hidden_state hide
#        modifier Mod4

#        separator_symbol "|"
#        workspace_min_width 10
#        tray_output none
#        strip_workspace_numbers yes

#        status_command SCRIPT_DIR=~/.config/i3/blocklets/ i3blocks

#        font pango:Cantarell 14

#        colors {
#        background    $dark
#        statusline    $white
#        separator     #555555

#        border     backgr    text
#        focused_workspace   $blue      $blue     $darker
#        active_workspace    $dark      $dark     $blue
#        inactive_workspace  $dark      $dark     $blue
#        urgent_workspace    $red       $red      $darker
#        }
            
#        colors {
#        background $inactive-bg-color
#        statusline $bg-color
              
#        border                         backgr                   Etext            
#        focused_workspace   $inactive-bg-color  $inactive-bg-color $text-color
#        active_workspace    $inactive-bg-color  $inactive-bg-color $inactive-text-color
#        inactive_workspace  $inactive-bg-color  $inactive-bg-color $inactive-text-color
#        urgent_workspace    $urgent-bg-color    $urgent-bg-color   $text-color
#        }

#        }
   
# Start i3bar to display a workspace bar (plus the system information i3status if available)
#bar {
#    i3bar_command i3bar 
#    status_command i3status
#    position bottom

# please set your primary output first. Example: 'xrandr --output eDP1 --primary'
#	tray_output primary
#	tray_output eDP1

#    bindsym button4 nop
#    bindsym button5 nop
#   font xft:URWGothic-Book 11
#   strip_workspace_numbers yes

#    colors {
#    set_from_resource $fg i3wm.color7 #f4dc98
#    set_from_resource $bg i3wm.color6 #0A1837
#        background $bg
#        statusline #F9FAF9
#        separator  #454947

#                      border  backgr. text
#        focused_workspace  #F9FAF9 $bg #292F34
#        active_workspace   #595B5B $bg #FDF6E3
#        inactive_workspace #595B5B $bg #EEE8D5
#        binding_mode       #16a085 $bg #F9FAF9
#        urgent_workspace   #16a085 $bg #E5201D
#    }
#}

# hide/unhide i3status bar
#bindsym $sup+m bar mode toggle
   
# ----------------------------------------------------------------------------
# I3BLOCKS
# ----------------------------------------------------------------------------

#i3blocks - keylock leds status
#bindsym --release Caps_Lock  $exe pkill -SIGRTMIN+11 i3blocks
#bindsym --release Num_Lock   $exe pkill -SIGRTMIN+11 i3blocks

# i3blocks - upgrades
#$ss+u                 $exe pkill -SIGRTMIN+14 i3blocks

## i3blocks volume control and status
#set $vol_signal pkill -SIGRTMIN+10 i3blocks

#$sup+F9                      $exe pavucontrol && $vol_signal
#$sup+F10                     $exe amixer set Master toggle && $vol_signal
#$sup+F11                     $exe amixer set Master playback 5%- unmute && $vol_signal
#$sup+F12                     $exe amixer set Master playback 5%+ unmute && $vol_signal

#XF86AudioRaiseVolume
#XF86AudioLowerVolume
#XF86AudioMute

# ----------------------------------------------------------------------------
# SECTION 10: AUTOSTART APPLICATIONS
# ----------------------------------------------------------------------------

# Resolução de Tela(Instalar Arandr)
#$exe ~/.screenlayout/default.sh
#$exe xrandr --output eDP-1 HDMI1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --rate 60.00
#$exe xrandr --output DP-1 --mode 3440x1440 --rate 143.97

#  Auto-detect the connected display hardware and load the appropriate X11 setup using xrandr 
$exe /usr/bin/autorandr -c --default default &

# Input devices
#$exe setxkbmap -layout br -model abnt2
$always pidof xbindkeys && killall xbindkeys || xbindkeys &
$exe ibus-daemon --xim -d -r
$exe numlockx on
#$exe unclutter

# TouchPad >>> https://github.com/bulletmark/libinput-gestures
$exe libinput-gestures-setup start &

# # System services
$always /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
$always $scriptdir/start_battery_monitor.sh

# Picom
$always ~/.config/picom/start_picom.sh

# Fonts
$always fc-cache -fv

# Configuração do tema X11
# Alternativa ao gnome-settings-daemon para usuários que não estão usando o ambiente de área de 
# trabalho GNOME, mas que ainda executam GTK+ e deseja configurar coisas como temas, 
# fontes antialiasing/hinting e efeitos sonoros da interface do usuário. 
# ~/.config/xsettingsd/xsettingsd.conf
$exe xsettingsd &
$always killall -HUP xsettingsd

# Autotiling(Instalar Autotiling)
# $always autotiling

# Thunar modo daemon, inicia automaticamente no login
# $exe thunar --daemon &
# Iniciar thunar mais rapido: sudo nvim /usr/share/gvfs/mounts/network.mount 
# Alterar AutoMount=true para AutoMount=false . 

# Gerenciador de inatividade com bloqueio e suspensão
$exe $scriptdir/start_xidlehook.sh
    
# Apply .Xresource. As far as I know, only needed here if using startx (dont have a login manager)
# Executa o seguinte comando ao iniciar o X11, para que as configurações de cores sejam aplicadas no seu ambiente, sejam carregadas.
#$always xrdb -merge ~/.Xresources

# ===== Configuração do Pywal =====
# Sistema dinâmico de cores que:
# 1. Seleciona aleatoriamente um wallpaper da pasta ~/.wallpaper
# 2. Gera um esquema de cores harmonioso com base na imagem (via Pywal)
# 3. Aplica as cores geradas em todos os componentes do sistema
# 4. Atualiza o Dunst e a Polybar para manter a consistência visual
# 5. Executa sempre que o i3 é reiniciado/recarregado

$always"
     WALLPAPER=$(find -L ~/.wallpaper -type f \( -name '*.jpg' -o -name '*.png' \) | shuf -n 1) && \
     wal -i \"$WALLPAPER\" --iterative && \
     source ~/.cache/wal/colors.sh && \
     ~/.config/dunst/update_dunst_colors.sh && \
     sleep 0.2 && \
     ~/.config/i3/scripts/alttab_pywal.sh && \
     ~/.config/polybar/launch.sh   
"

#exec_always --no-startup-id "~/.config/polybar/launch.sh"

# Monitora o arquivo e reinicia o i3wm se houver mudanças
$exe $scriptdir/watch_config_i3.sh &

# Welcome
$exe sleep 7 && \
notify-send -i "$HOME/.icons/kora/apps/scalable/cs-cat-admin.svg" "Olá $USER, Seja Bem-vindo!" && \
paplay "$HOME/.config/i3/sounds/Epic_Sax_Guy.mp3"

# ----------------------------------------------------------------------------
# SECTION 11:SYSTRAY APPLETS
# ----------------------------------------------------------------------------

# Habilitar por padrão na configuração do i3 para iniciar automaticamente aplicativos como em um DE.
# if you do not use dex: exec --no-startup-id dex --autostart --environment i3
# you need to have tray apps started manually one by one:

# Execute .desktop files + apps using /etc/xdg/autostart. ~ https://github.com/jceb/dex
#$exe dex -a -s /etc/xdg/autostart/:~/.config/autostart/
#$exe dex --autostart --environment i3

$exe sleep 2 && nm-applet
$exe keepassxc --minimized
$exe sleep 4 && xfce4-clipman
$exe sleep 8 && telegram-desktop -startintray %u
$exe sleep 16 && zapzap
#$exe sleep 20 && blueman-applet
#$exe sleep 24 && whatsie
#$exe kdeconnect-indicator

# Redshift - ==> geoclue /etc/geoclue/geoclue.conf 
$exe sleep 32 && redshift-gtk  &
$exe /usr/lib/geoclue-2.0/demos/agent

# AnyDesk
#$exe anydesk

# ----------------------------------------------------------------------------
# SECTION 12: WORKSPACE LAYOUTS
# ----------------------------------------------------------------------------

# i3-save-tree --workspace 1 > ~/.config/i3/cenarios/layout_2.json
# sed -i 's|^\(\s*\)// "|\1"|g; /^\s*\/\//d' ~/.config/i3/cenarios/layout_2.json
# sed -i -e '/"swallows": \[/,/\]/ {s|^\(\s*\)// \("class".*\)$|\1\2|; s|^\(\s*

set $restore_layout append_layout ~/.config/i3/

# Start in current workspace
$sc+1 $restore_layout/cenarios/layout_2.json; $exe firefox; $exe geany; $exe thunar; $exe kitty

# Start in a specific workspace
$sc+2 workspace 7; $restore_layout/cenarios/layout_1.json; $exe firefox; $exe geany; $exe thunar; $exe tilix
bindsym F12 $exe $scriptdir/save_restore_del.sh

# Restore all workspaces and windows
#bindsym F4 $exe "i3-resurrect ls -d ~/.cache/i3-resurrect | sed -n '/programs/!p' | awk '{print $2}' | xargs -n1 i3-resurrect restore -d ~/.cache/i3-resurrect -w"

# i3-layout-manager
#$sup+F1 $exe ~/.config/i3/i3-resurrect-dmenu

#  ===> RESURRECT
# Save all workspace layouts
#bindsym F3 $exe "i3-msg -t get_workspaces | sed 's/},{/\n/g' | awk -F, '{print $3}' | awk -F: '{print $2}' | xargs -n1 i3-resurrect save -d ~/.cache/i3-resurrect -w"

# Restore all workspaces and windows
#bindsym F4 $exe "i3-resurrect ls -d ~/.cache/i3-resurrect | sed -n '/programs/!p' | awk '{print $2}' | xargs -n1 i3-resurrect restore -d ~/.cache/i3-resurrect -w"

# Debugging - remover após análise
#$always  bash -c 'date +"Início: %H:%M:%S" > /tmp/i3-debug.log'
#$always  bash -c 'for i in {2..60}; do date +"$i: %H:%M:%S" >> /tmp/i3-debug.log; sleep 1; done' &

