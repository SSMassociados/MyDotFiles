//
// Tab overrides
//
/*
.gedit-bottom-panel-paned notebook,
terminal-window notebook {
  > header.top > tabs > tab:checked { box-shadow: inset 0 -1px $borders_color; }
}
*/

//
// GNOME Terminal, MATE Terminal
//
terminal-window,
.mate-terminal {

    notebook {
        > header.top {
            //      padding-top: 3px;
            //      box-shadow: inset 0 1px $borders_color;
            tabs > tab {
                border-top: 1px solid transparent;
            }

            button {
                padding: 0;
                min-width: 24px;
                min-height: 24px;
            }
        }
    }
}

//
// Nautilus
//
.nautilus-canvas-item {
    border-radius: 2px;
}

.nautilus-desktop.nautilus-canvas-item {
    color: white;
    text-shadow: 1px 1px transparentize(black, 0.4);

    &:active {
        color: $fg_color;
    }

    &:selected {
        color: $selected_fg_color;
        text-shadow: none;
    }
}

.nautilus-canvas-item.dim-label,
.nautilus-list-dim-label {
    color: mix($fg_color, $bg_color, 50%);

    &:selected,
    &:selected:focus {
        color: mix($selected_fg_color, $selected_bg_color, 80%);
    }
}

.nautilus-window {
    // Workaround for https://bugzilla.gnome.org/show_bug.cgi?id=724096
    searchbar {
        border-top: 1px solid $borders_color;
    }
    .searchbar-container {
        margin-top: -1px;
    }
}

.nautilus-window notebook,
.nautilus-window notebook > stack {
    border-radius: 0 0 $wm_radius $wm_radius;
}

.nautilus-window.maximized notebook,
.nautilus-window.maximized notebook > stack {
    border-radius: 0 0 0 0;
}

.nautilus-window notebook,
.nautilus-window notebook > stack:not(:only-child) searchbar {
    background-color: $base_color;
}

button.nautilus-circular-button.image-button {
    @extend button.circular;
}

$disk_space_unknown: transparentize($fg_color, 0.5);
$disk_space_used: transparentize($selected_bg_color, 0.2);
$disk_space_free: darken($bg_color, 3%);

.disk-space-display {
    border-style: solid;
    border-width: 1px;

    &.unknown {
        background-color: $disk_space_unknown;
        border-color: darken($disk_space_unknown, 10%);
    }
    &.used {
        background-color: $disk_space_used;
        border-color: darken($disk_space_used, 10%);
    }
    &.free {
        background-color: $disk_space_free;
        border-color: darken($disk_space_free, 10%);
    }
}

@keyframes needs_attention_keyframes {
    0% {
        @include button(header-hover);
    }
    100% {
        @include button(header-active)
    }
}

.nautilus-operations-button-needs-attention {
    animation: needs_attention_keyframes 2s ease-in-out;
}

.nautilus-operations-button-needs-attention-multiple {
    animation: needs_attention_keyframes 3s ease-in-out;
    animation-iteration-count: 3;
}

// Batch renaming dialog
.conflict-row.activatable {
    &,
    &:active {
        color: $error_fg_color;
        background-color: $error_color;
    }

    &:hover {
        background-color: lighten($error_color, 10%);
    }

    &:selected {
        color: $selected_fg_color;
        background-color: $selected_bg_color;
    }
}

// Floating Bar
.nautilus-window .floating-bar {
    padding: 1px;
    background-color: $selected_bg_color;
    color: $selected_fg_color;
    border-radius: 3px 0 $wm_radius - 2px 0;

    &.bottom.left {
        border-top-left-radius: 0;
    }
    &.bottom.right {
        border-top-right-radius: 0;
    }

    button {
        border: none;
        border-radius: 100px;
        min-height: 0;
        min-width: 0;
        padding: 0;
        margin-right: 6px;
        -gtk-icon-shadow: none;
        @extend %selected-button;
    }
}

// Reset maximized nautilus-window floating-bar border-radius
.nautilus-window.maximized .floating-bar { border-radius: 3px 0 0 0; }

//
// Nemo
//
.nemo-desktop.nemo-canvas-item {
    @extend .nautilus-desktop.nautilus-canvas-item;
}

.nemo-window {

    .nemo-places-sidebar.frame {
        border-width: 0;
    }
    notebook {
        background-color: $base_color;
    } // Rename entry
    .nemo-window-pane widget.entry {
        border: 1px solid;
        border-radius: 3px;

        @include entry(focus);

        &:selected {
            &:focus,
            & {
                @extend %selected_items;
            }
        }
    }

    .primary-toolbar {
        @extend %header_widgets;
        border: none;
        color: $header_fg;
        background-color: opacify($header_bg, 1);
        box-shadow: inset 0 -1px $borders_color;
    } // Pathbar

    .primary-toolbar widget.raised.linked:not(.vertical):not(.path-bar) {

        > button {
          @include button(header-normal);
          &:hover { @include button(header-hover); }
          &:active { @include button(header-active); }
          &:checked { @include button(header-checked); }
          &:disabled { color: transparentize($header_fg, 0.4); }
          &:backdrop { opacity: 0.7; background-image: none; @if $compact == 'false' { box-shadow: none; } }
          &, &:hover, &:active, &:checked, &:disabled {
            @extend %linked;
            @if $compact == 'true' { border-right: 1px solid $header_button_border; }
          }
        }

        // @include pathbar_linking_rules($sep_color:$header_button_border);
    }
}


//
// Caja
//
.caja-desktop {
    @extend .nautilus-desktop.nautilus-canvas-item;
}

.caja-notebook {
    border-top: 1px solid $borders_color;
}

.caja-side-pane .frame {
    border-width: 1px 0 0;
}

.caja-notebook .frame {
    border-width: 0 0 1px;
}

//
// Gedit
//
.open-document-selector-treeview.view {
    padding: 3px 6px 3px 6px;
    border-color: $base_color; // disable borders, making them transparent doesn't work for some reason
    &:hover {
        background-color: mix($fg_color, $base_color, 7%);

        &:selected {
            color: $selected_fg_color;
            background-color: $selected_bg_color;
        }
    }
}

.open-document-selector-name-label {
    color: $fg_color;
}

.open-document-selector-path-label {
    color: mix($fg_color, $base_color, 50%);
    font-size: smaller;

    &:selected {
        color: transparentize($selected_fg_color, 0.1);
    }
}

.gedit-document-panel { // 'documents' pane

    row.activatable { padding: 6px 0; }

    row button { // 'close' button
        min-width: 22px;
        min-height: 22px;
        padding: 0;
        margin: 0 6px;
        border-radius: 100px;
        -gtk-outline-radius: 100px;

        image {
            color: inherit;
        }
    }

    row:hover:not(:selected) button {
        color: mix($bg_color, $fg_color, 35%);

        &:hover {
            color: lighten(red, 15%);
        }
        &:active {
            color: $fg_color;
        }
    }

    row:hover:selected button:hover {
        color: lighten(red, 20%);

        &:active {
            color: $selected_fg_color;
        }
    }
}

.gedit-document-panel-dragged-row {
    border: 1px solid $borders_color;
    background-color: darken($bg_color, 10%);
    color: $fg_color;
}

.gedit-side-panel-paned statusbar {
    border-top: 1px solid $borders_color;
    background-color: $bg_color;
    border-radius: 0 0 $wm_radius $wm_radius;
}

.gedit-search-slider {
    background-color: lighten($bg_color, 2%);
    padding: 6px;
    border-color: $borders_color;
    border-radius: 0 0 $bt_radius $bt_radius;
    border-width: 0 1px 1px 1px;
    border-style: solid;
}

.gedit-search-entry-occurrences-tag {
    color: transparentize($fg_color, 0.4);
    border: none;
    margin: 2px;
    padding: 2px;
}

.gedit-map-frame {
    border {
        @if $variant=='light' {
            border-color: transparentize(black, 0.7);
        }
        border-width: 0;

        &:dir(ltr) {
            border-left-width: 1px;
        }
        &:dir(rtl) {
            border-right-width: 1px;
        }
    }
}

.gedit-side-panel-paned.horizontal {

  // 'file-browser' pane
  > box.vertical > stack > grid.horizontal {
    > box.horizontal {  // header-part
      margin: 4px 0;
    }
    > scrolledwindow { // raised widget
      margin: 0 6px 6px 6px;
      border-radius: 0;
      box-shadow: $shadow_5;
    }
  }
}

paned.titlebar.horizontal {
  headerbar {
    button.flat.toggle.popup:not(.image-button) { // left-pane header button
      @extend %headerbar_buttons;

      box > .title {
        padding: 0; // remove lateral padding
        margin: -2px 0;
      }
    }
  }
}


//
// Pluma
//
.pluma-window statusbar frame > border {
    border: none;
}

.pluma-window notebook > stack scrolledwindow {
    border-width: 0 0 1px 0;
}

#pluma-status-combo-button {
    min-height: 0;
    padding: 0;

    border-top: none;
    border-bottom: none;
    border-radius: 0;
}

//
// Gnome Builder
//
// TODO: Merge this with the upstream stylesheet
.gb-search-entry-occurrences-tag {
    background: none;
}

workbench.csd > stack.titlebar:not(headerbar) {
    padding: 0;
    background: none;
    border: none;
    box-shadow: none;

    headerbar {
        &,
        &:first-child,
        &:last-child {
            border-radius: $_header_radius $_header_radius 0 0;
        }
    }
}

editortweak .linked > entry.search:focus + .gb-linked-scroller {
    border-top-color: $selected_bg_color;
}

layouttab {
    background-color: $base_color;
}

layout {
    border: 1px solid $borders_color;
    -PnlDockBin-handle-size: 1;
}

eggsearchbar box.search-bar {
    border-bottom: 1px solid $borders_color;
}

pillbox {
    color: $selected_fg_color;
    background-color: $selected_bg_color;
    border-radius: 3px;

    &:disabled label {
        color: transparentize($selected_fg_color, 0.5)
    }
}

docktabstrip {
    padding: 0 6px;

    background-color: $bg_color;
    border-bottom: 1px solid $borders_color;

    docktab {
        min-height: 28px;
        border: solid transparent;
        border-width: 0 1px;

        label {
            opacity: 0.5;
        }
        &:checked,
        &:hover {
            label {
                opacity: 1;
            }
        }

        &:checked {
            border-color: $borders_color;
            background-color: $base_color;
        }
    }
}

dockbin {
    border: 1px solid $borders_color;
    -PnlDockBin-handle-size: 1;
}

dockpaned {
    border: 1px solid $borders_color;
}

dockoverlayedge {
    background-color: $bg_color;

    docktabstrip {
        padding: 0;
        border: none;
    }

    &.left-edge tab:checked,
    &.right-edge tab:checked {
        border-width: 1px 0;
    }
}

popover.messagepopover {
    &.background {
        padding: 0;
    }

    .popover-content-area {
        margin: 16px;
    }
    .popover-action-area {
        margin: 8px;

        button:not(:first-child):not(:last-child) {
            margin: 0 4px;
        }
    }
}

popover.popover-selector {
    padding: 0;

    list {
        row {
            padding: 5px 0;
        }
        row image {
            margin-left: 3px;
            margin-right: 10px;
        }
    }
}

entry.search.preferences-search {
    border: none;
    border-right: 1px solid $borders_color;
    border-bottom: 1px solid $borders_color;
    border-radius: 0;
}

preferences stacksidebar.sidebar {
    list {
        background-image: _solid($base_color);
    }

    list separator {
        background-color: transparent;
    }
}

devhelppanel entry:focus,
symboltreepanel entry:focus {
    border-color: $borders_color
}

button.run-arrow-button {
    min-width: 12px;
}

omnibar.linked > entry:not(:only-child) {
    border-style: solid;
    border-radius: 3px;
    margin-left: 1px;
    margin-right: 1px;
}

gstyleslidein {
    #scale_box,
    #strings_controls,
    #palette_controls,
    #components_controls {
        button.toggle:checked {
            color: $fg_color;
        }
    }
}

configurationview {
    entry.flat {
        background: none;
    }
    list {
        border-width: 0;
    }
}

//
//  * Gnome-Logs *
//

window.background > box.vertical box.horizontal {

  list.categories { border-radius: 0 0 0 $wm_radius; } // side-pane

    > box.vertical > scrolledwindow > viewport.frame > list {

        // > 3.25.90
        row.event.activatable {
            color: $fg_color;
            transition-duration: 0.1s;
            &:hover,
            &:active {
                color: $fg_color;
            }

            label.compressed-entries-label {
                // hard-coded background-color?
                background-image: image($suggested_color);
                color: $selected_fg_color;
                font-weight: 700;
            }

            &.compressed-row {
                background-image: image(darken($bg_color, 3%));
                color: darken($fg_color, 20%);
                transition-property: opacity, // exclude background-color
                border-image,
                background-image,
                box-shadow;
                &:hover {
                    background-image: image(mix($fg_color, $bg_color, 5%));
                    color: $fg_color;
                }
                &:active {
                    &,
                    &:focus {
                        background-image: image(mix($fg_color,
                        $bg_color, 10%));
                        color: $fg_color;
                        animation: none;
                    }
                }

                &.popover-activated-row {
                    background-image: image($selected_bg_color);
                    color: $selected_fg_color;
                }

                &-header {
                    background-image: image($base_color); // stop highlighting
                    color: $selected_bg_color;
                    &:hover {
                        background-image: image(mix($selected_bg_color,
                        $base_color, 5%));
                    }
                    &:active {
                        &,
                        &:focus {
                            background-image: image(mix($selected_bg_color,
                            $base_color, 10%));
                            color: $selected_bg_color;
                            animation: none;
                        }
                    }

                    label.compressed-entries-label {
                        background-image: image($selected_bg_color);
                        color: $selected_fg_color;
                        transition-duration: 0s;
                    }
                }
            }
        }
    }
}

//
// Gnome Documents
//

.documents-scrolledwin.frame {
    border-width: 0;
}

button.documents-load-more {
    border-width: 1px 0 0;
    border-radius: 0;
}

.documents-icon-bg {
    background-color: $selected_bg_color;
    color: $selected_fg_color;
    border-radius: 2px;
}

.documents-collection-icon {
    background-color: transparentize($fg_color, 0.7);
    border-radius: 2px;
}

button.documents-favorite:active,
button.documents-favorite:active:hover {
    color: lighten($selected_bg_color, 20%);
}

.documents-entry-tag {
    color: $selected_fg_color;
    background: $selected_bg_color;
    border-radius: 3px;
    border-width: 0;
    margin: 2px;
    padding: 4px;

    &:hover {
        color: $selected_fg_color;
        background: lighten($selected_bg_color, 4%);
    }
    &:active {
        color: $selected_fg_color;
        background: darken($selected_bg_color, 4%);
    }
    &.button {
      box-shadow: none;
      border: none;
      background-color: transparent;
    }
}

.content-view.document-page {
    border-style: solid;
    border-width: 3px 3px 6px 4px;
    border-image: url("assets/thumbnail-frame.png") 3 3 6 4;
}

//
// Gnome Photos
//

.photos-entry-tag {
    @extend .documents-entry-tag;
}

.photos-collection-icon {
    @extend .documents-collection-icon;
}

.photos-fade-in {
    opacity: 1.0;
    transition: opacity 0.2s ease-out;
}

.photos-fade-out {
    opacity: 0.0;
    transition: opacity 0.2s ease-out;
}

//
// Gnome Tweak Tool
//

.tweak-categories,
.tweak-category:not(:selected):not(:hover) {
    background-image: _solid($base_color);
}

// sidebar on gnome tweak
.tweak-categories { border-radius: 0 0 0 $wm_radius; }

.tweak-titlebar-right,
dialog.csd > headerbar.titlebar { > switch { margin: 8px 0; } }

/************************
 * Gnome Control Center *
 ************************/

// users section

stack > box.vertical > widget > overlay grid.horizontal > stack {
  > button.toggle { }
}

// > 3.25.90
scrolledwindow.view > viewport.frame > stack > list { // left-pane
  > row.activatable { }
}

box.horizontal.titlebar > headerbar > stack > box.vertical {
  > .title { margin: 0; }
  > .subtitle { margin: -3px 0; }
}

dialog.background.csd {
  > headerbar.titlebar {

    > label:not(.title):not(.subtitle) {
      font-weight: 700;
    }
  }
}

//
// Transmission
//
.tr-workarea undershoot,
.tr-workarea overshoot {
    border-color: transparent; // Remove black border on over- and undershoot
}

//
// Atril (MATE pdf viewer)
//
.atril-window .primary-toolbar toolbar {
    background: none;
}

//
// Gnome Flashback
//
#gf-bubble,
#gf-osd-window,
#gf-input-source-popup,
#gf-candidate-popup {
    &,
    &.solid {
        color: lighten($osd_fg_color, 7%);
        background-color: $osd_bg_color;
        border: 1px solid darken($osd_bg_color, 8%);
        border-radius: 2px;
    }

    levelbar {
        block {
            &.low,
            &.high,
            &.full {
                background-color: $selected_bg_color;
                border-color: $selected_bg_color;
            }
            &.empty {
                background-color: darken($osd_bg_color, 5%);
            }
        }
        trough {
            background: none;
        }
    } // FIXME still needs button styling
}

#gf-input-source {
    min-height: 32px;
    min-width: 40px;

    &:selected {
        color: $selected_fg_color;
        background-color: $selected_bg_color;
        border-radius: 2px;
    }
}

gf-candidate-box {
    label {
        padding: 3px;
    }

    &:hover,
    &:selected {
        color: $selected_fg_color;
        background-color: $selected_bg_color;
        border-radius: 2px;
    }
}

 /*************
  * rhythmbox *
  *************/

// add top-border to inline-toolbar
.sidebar-paned .inline-toolbar.horizontal.sidebar-toolbar {
  box-shadow: inset 0 1px $borders_color;
  padding: 4px;
  background-color: darken($bg_color, 3%);

  button.image-button {
//    min-width: 24px;
//    min-width: 24px;
//    padding: 2px;
    @if $variant == 'dark' { border: none; }
    &:active, &:checked { @include button(flat-active); border-color: $borders_color; }

    > widget > box > image { padding: 0; }
  }
}

// tweak sidebar styling
.sidebar-paned {
  scrolledwindow { border: none; }

  treeview.view.sidebar { }
}

// tweak border and frame in alt-toolbar
window.csd > box.vertical > box.vertical,
window.solid-csd > box.vertical > box.vertical {
  > toolbar.horizontal {
    margin: -1px 0;
    border-top: 1px solid $borders_color;
    box-shadow: none;
    background-color: transparent;

    button {
      min-height: 36px;
      min-width: 36px;
      padding: 0;
      margin-top: 8px;
      margin-bottom: 8px;
      @if $variant == 'dark' { border: none; }
//      &:hover { @include button(flat-hover); }
      &:active, &:checked { @include button(flat-active); border-color: $borders_color; }
    }
  }

  > frame {
    margin: -1px 0;
    padding: 0;

    > border { border: none; }
  }
}

// hard-coded spacing depends on non-scalable unit,
// seems cover-art widget is the most biggest thing?

window.background > box.vertical > toolbar.primary-toolbar {

  toolitem {
    .linked > button.image-button.raised { // 'shuffle/repeat'
      min-height: 36px;
      min-width: 36px;
      padding: 0;
      margin: 0;
      @if $variant == 'dark' { border: none; }
//      &:hover { @include button(flat-hover); }
      &:active, &:checked { @include button(flat-active); border-color: $borders_color; }
      > widget > box > image { padding: 0; }
    }

    button.flat.scale { // 'volume'
      min-height: 24px;
      min-width: 36px;
      padding: 0;
      margin-top: 8px;
      margin-bottom: 8px;
    }

    > box.horizontal:not(.linked) > button.toggle,
    > .linked > button:not(.toggle):not(.raised):not(.flat) {
      min-height: 28px;
      min-width: 28px;
      padding: 0;
      margin: 0;
      @if $variant == 'dark' { border: none; }
//      &:hover { @include button(flat-hover); }
      &:active, &:checked { @include button(flat-active); border-color: $borders_color; }
    }
  }
}

 /********************
  * Gnome Calculator *
  ********************/

window.background {
  > headerbar.titlebar { // mode-selector button
    > button.flat.popup.toggle.text-button.title {
      // .title class existed
      margin: 6px 0; // set standard margins

      > grid > widget { // down arrow
        padding-top: 3px;
        // add spacing between arrow and label
        &:dir(ltr) { padding-left: 4px; }
        &:dir(rtl) { padding-right: 4px; }
      }
    }
  }

  > grid.vertical > box.vertical > widget,
  > grid.vertical > box.vertical > box.vertical > widget,
  > grid.vertical > box.vertical grid.math-buttons {
    button {
      font-weight: 700;

      &:not(.suggested-action) {
        &:active { @include button(flat-active); border-color: $borders_color; }
        &:checked { @include button(flat-checked); border-color: $borders_color; }
      }

      &.suggested-action {  // '=' button
      }
    }
  }
}

 /************
  * Epiphany *
  ************/

$question_bg_color: #FFEA00;

// incognito-mode styling
//
// most of widget styling are hard-coded by ephy's stylesheet,
// but we should force using dark foregrounds at least...

headerbar.titlebar.incognito-mode {
  entry {
    @include entry(header-normal);

    &:focus { @include entry(header-focus); }
    &:disabled { @include entry(header-insensitive); }
  }

//  button:not(.destructive-action):not(.suggested-action) {
//    // these classes are specificity bump to override titlebuttons
//    &:not(.appmenu):not(.icon):not(:indeterminate) {
//      &,
//      &:hover,
//      &:active,
//      &:checked {
//        * { }
//      }
//      &:disabled,
//      &:checked:disabled {
//        * { }
//      }
//    }
//  }
}

// reset inverted foreground colour
notebook > box > stack > box.vertical > paned.vertical > overlay {
  > .floating-bar { color: rgba($fg_color, 0.75); }
}

.background:not(.csd) > box.vertical > headerbar {
  // conflicts with .primary-toolbar styling?
  .linked > button.image-button { // = 'back/forward' button

  }
}

// overrides foregrounds for 3.24's ssd-mode
.background headerbar entry {
  &.starred,
  &.non-starred {
    @include entry(header-normal);

    &:focus { @include entry(header-focus); }
    &:disabled { @include entry(header-insensitive); }
  }

  // render yellow 'star' icon if bookmarked
  &.starred > image.right {
    color: darken($question_bg_color, 10%);
    &:hover,
    &:active,
    &:checked { color: $question_bg_color; }
  }
}

// popover for downloaded lists
popover.background:not(.emoji-picker) > box.vertical {
  // For clean button
  button:not(.destructive-action):not(.suggested-action):only-child {
    &:active, &:checked { @include button(flat-active); }
  }
}

popover.background:not(.emoji-picker) > box.vertical > scrolledwindow {
  // re-define background colours for GtkListBox
  > viewport.frame > list.background {
    background-color: transparent;

    > row.activatable {
      background-color: if($variant=='light', $bg_color, lighten($bg_color, 10%));
      color: rgba($fg_color, 0.85);
      border-radius: $bt_radius;
      border: 1px solid $borders_color;
      margin: 2px;
      @if $variant=='light' { box-shadow: $shadow_3, inset 0 0 0 1px rgba($borders_color, 0.01); }

      &:hover { @include button(hover); }
      &:active, &:checked { @include button(flat-active); }
    }
  }
}

// popover for bookmarks
popover.background:not(.emoji-picker) > box.vertical > stack > box.vertical {

  scrolledwindow > viewport.frame {
    border: 1px solid $borders_color;

    > list.background > row.activatable.bookmarks-row {
      background-color: rgba($base_color, 0.35);
      color: rgba($fg_color, 0.85);
      border-bottom: 1px dashed rgba($borders_color, 0.05);
      padding: 6px;

      &:hover,
      &:active,
      &:checked { color: $fg_color; background-color: rgba($fg_color, 0.05); }

      button.flat {
        min-width: 16px;
        min-height: 16px;
        padding: 4px; // Same as of image.sidebar-icon
//        margin: 0 4px;
        border-radius: 100px;
        -gtk-outline-radius: 100px;
      }
    }
  }
}

// bookmark-tag flowbox-childs (almost hard-coded)
flowboxchild.bookmark-tag-widget {
  color: $bg_color; // unchecked
  font-weight: 500;

  label { margin-bottom: 2px; }

  &-selected { color: $selected_fg_color; } // checked
}

//
// Mate OSD Window
//

MsdOsdWindow.background.osd {
    border-radius: 2px;
    border: 1px solid darken($osd_bg_color, 8%);

    .progressbar {
        background-color: $selected_bg_color;
        border: none;
        border-color: red;
        border-radius: 5px;
    }
    .trough {
        background-color: darken($osd_bg_color, 5%);
        border: none;
        border-radius: 5px;
    }
}

//
// Mate/Gnome Flashback Panel
//

.mate-panel-menu-bar,
panel-toplevel.background {

    &,
    menubar {
        background-color: opacify($panel_bg, 1);
    }

    menubar,
    #PanelApplet label,
    #PanelApplet image {
        color: $panel_fg;
    } // Panel buttons
    button:not(#tasklist-button) {
        @extend %panelbutton;
    }

    button,
    #tasklist-button {
        label,
        image {
            color: inherit;
        }
    }

    .wnck-pager {
        color: mix($panel_fg, black, 50%);
        background-color: darken($panel_bg, 10%);

        &:hover {
            background-color: lighten($panel_bg, 5%);
        }

        &:selected {
            color: lighten($selected_bg_color, 20%);
            background-color: $selected_bg_color;
        }
    }

    na-tray-applet {
        -NaTrayApplet-icon-padding: 0;
        -NaTrayApplet-icon-size: 16px;
    }
}

// Xfce Panel
.xfce4-panel.panel {
    background-color: $panel_bg;

    text-shadow: none;
    -gtk-icon-shadow: none;

    button.flat {
        @extend %panelbutton;
    }
}

#tasklist-button {
    color: transparentize($panel_fg, 0.2);
    border-radius: 0;
    border: none;
    background-color: transparentize($panel_bg, 1);

    &:hover {
        color: lighten($panel_fg, 10%);
        background-color: transparentize(black, 0.83);
    }

    &:checked {
        color: white;
        background-color: transparentize(black, 0.75);
        box-shadow: inset 0 -2px $selected_bg_color;
    }
}

%panelbutton {
    color: $panel_fg;
    border-radius: 0;
    border: none;
    background-color: transparentize($panel_bg, 1);

    &:hover {
        border: none;
        background-color: lighten($panel_bg, 10%);
    }
    &:active,
    &:checked {
        color: $selected_fg_color;
        border: none;
        background-color: $selected_bg_color;

        label,
        image {
            color: inherit;
        }
    }
}

 /*********
  * Geary *
  *********/

.geary-titlebar-left {
  // remove unexpected "hardcoded" vertical separator
  separator { opacity: 0; }

  > button { // button
    min-width: 22px;
  }
}

.geary-titlebar-right {
  // stop double-shadows on right paned header-bar
  separator { opacity: 0; }
  box-shadow: none;

  > button { // button
    min-width: 22px;
  }
}

//
// * Firefox and Thunderbird *
//

window.background:not(.csd) {
  > widget {
    // for the bookmark toolbar's separators
    > separator {
      padding-top: 1px;
      margin-top: 1px;
      min-height: 2px;
      background-color: rgba($borders_color, 0.07);
    }

    // avoid black border
    > scrollbar { background-clip: border-box; }

    // emphasize borders color
    > scrollbar,
    > frame > border { border-color: $borders_color; }

    > entry,
    > button > button {
      border: 1px solid $borders_color;
      border-radius: $bt_radius;
      box-shadow: inset 0 0 0 1px rgba($borders_color, 0.02);
    }

    > entry,
    .entry { // Set for linked entrys
//      min-height: 26px;
      border-radius: $bt_radius;
      background-image: image($base_color);
      border: 1px solid $borders_color;

      &:focus { border-color: $entry_highlight; box-shadow: inset 0 0 0 2px $entry_highlight; }
    }

    > spinbutton {
      background-image: image($button_bg);
      border: 1px solid $borders_color;
      &:active { background-image: image($header_button_active_bg); }

      // Fixed thunderbird linked entry spinbutton border-radius.
      .entry { border-top-right-radius: 0;  border-bottom-right-radius: 0; }
    }

    > button {
      padding-top: 3px;
      padding-bottom: 3px;
    }

    > button > button {
      outline-style: none;

      &:active {
        background-image: image($header_button_active_bg);
        border: none;
        box-shadow: inset 0 0 0 1px $borders_color;
      }

      label { padding: 4px 6px; }
    }
  }

  > menu,
  .menu { // context-menus
    background-color: if($variant == 'light', $base_color, lighten($bg_color, 5%));
    border-radius: 0;
//    border: none;

    .separator:not(label),
    .csd & .separator:not(label) { color: $borders_color; }
  }
  > menu > menuitem { padding: 4px 6px; }
  > menu > menuitem > label:disabled { color: $insensitive_fg_color; }
  > menu > menuitem > radio,
  > menu > menuitem > check { padding: 0 2px 0 4px; }
}

// /*******************
//  * Firefox Quantum *
//  *******************/

#MozillaGtkWidget.background {

  // blend with weird toolbar backgrounds
  background-color: $bg_color;

  // FIXME: resetting child elements background is not fully functional yet
  // because WidgetStyleCache keeps holding initial background-color.
  // the stem of this incorrect colouring seems to be caused by their
  // gdk_rgba to ns_rgba conversion. I don't think theme's fault.
  .background,
  frame,
  separator,
  scrolledwindow { background-color: $bg_color; }

  scrollbar {
    background-color: transparent;
    slider {
      background-color: mix($fg_color, $bg_color, 45%);
      &:hover { background-color: mix($fg_color, $bg_color, 60%); }
      &:hover:active { background-color: mix($fg_color, $bg_color, 75%); }
      &:disabled { background-color: transparent; }
      }
    }

  *:not(menuitem):hover, // exclude menuitem node
  *:focus,
  *:active,
  *:checked {
    &, button { color: $fg_color; } // enforce opaque foregrounds
  }

  > window.background > menu { // context-menus
    background-color: if($variant == 'light', $base_color, lighten($bg_color, 5%));
    border-radius: 0;
    border-color: $borders_color;

    // revert to standard separators
    > separator { margin-top: 2px; margin-bottom: 2px; background-color: $borders_color; }
  }

  > widget {
    border { border-color: $borders_color; }

    separator { background-color: $borders_color; }

    // FIXME: this affected to popover widget as well,
    // so we can not set $lighter_bg_color to search-bar...
    > scrolledwindow > textview {
      background-color: if($variant == 'light', $base_color, lighten($bg_color, 5%));

      text {
        background-color: transparent;
        color: if($variant =='light', #242424, #aaaaaa);
        &:selected,
        &:selected:focus,
        selection { @extend %selected_items; }
      }
    }
  }
}

 /***************
  * Chrome(ium) *
  ***************/

window.background.chromium {
  // checked-tab & toolbar & button widgets
//  background-color: $bg_color;
//  color: $text_color;

  headerbar.titlebar {
    button.toggle { // account-button (> 64.0.3282?)
      border: none;
      background-color: transparent;
      background-image: none;

      &:hover { @include button(flat-hover); }
      &:checked, &:active { @include button(flat-active); }
    }

    // from nav_button_provider_gtk3.cc (> 62.0.3202?)
    button.titlebutton { // title-buttons
      // define global titlebutton class sizing
      min-width: if($titlebutton == 'thin', 17px, 16px);
      min-height: if($titlebutton == 'thin', 17px, 16px);
      margin: 0; // unset margins
      padding: 0 0;
      background-size: auto;
      color: transparent; // hide stock icons
    }
  }

  // FIXME: not for actual button widgets but for toolbar's separators
  // crazy: src/+/master/chrome/browser/ui/libgtkui/gtk_ui.cc#891
  button { // for active-tab borders
    border-width: 1px;
    border-style: solid;
    border-color: $borders_color;
  }

  entry.chromium {
    &, &:focus { // overrides standard borders
      border-image: none;
      border: 1px solid $borders_color;
    }
  }

  // internal region of toolbar's entry widget
  > textview.view { background-color: $base_color; }
}

/****************
 * Libre-Office *
 ****************/

window.background:not(.csd):not(.solid-csd) {
    // reserved area at the most-right side of GtkMenuBar
    > grid.horizontal > grid.horizontal {
        background-image: if($darker=='false' and $variant=='light', linear-gradient(180deg, #E2E2E2 0%, #d2d2d2 100%), none);
        background-color: transparent;
        box-shadow: inset 0 -1px $borders_color;

        > button.flat.small-button {
            // 'close' button
            color: $header_fg;
            border: none;
            border-radius: 50px;
            background-image: none;
            &:hover {
                background-color: lighten($header_bg, 15%);
                color: lighten($header_fg, 5%);
            }
            &:active,
            &:checked {
                background-color: rgba(red, 0.65);
                color: white;
            }
            &:disabled {
                color: rgba($header_fg, 0.6);
            }
        }
    }
}

window.background:not(.solid-csd) {
    // for 'Notebookbar' toolbar
  > notebook:not(.frame) {
    border: 0 none transparent; // unset borders
    background-color: $base_color;

    > stack {
      border: none;
      box-shadow: none;
    }
  }
}

// /************
//  * Synaptic *
//  ************/

window > box.vertical > box.horizontal {
  > toolbar {
    background-color: transparent;
    box-shadow: none;

    toolitem > box {
      label,
      entry {
        min-height: 20px;
        padding-top: 2px;
        padding-bottom: 2px;
        font-size: 90%;
      }

      > label { color: $fg_color; }
    }
  }

  > widget { background-color: transparent; }
}

// * Elementary Apps *

//
// Wingpanel
//

.panel {
  background-color: transparent;
  transition: all 100ms ease-in-out;
  color: white;

  &.maximized {
    background-color: black;
  }

  &.translucent {
    background-color: rgba(#000, 0.5);
    box-shadow:
      0 1px 3px rgba(#000, 0.24),
      0 1px 1px rgba(#000, 0.52);
//    margin-bottom: 4px;
  }

  &.color-light {

    .translucent {
      background-color: rgba(#fff, 0.85);
      box-shadow:
        inset 0 -1px 1px rgba(#fff, 0.2),
        0 1px 3px rgba(#000, 0.24),
        0 1px 1px rgba(#000, 0.12);
//      margin-bottom: 4px;
    }

    .composited-indicator {
       > revealer label,
       > revealer image,
       > revealer spinner {
         background-color: rgba(#fff, 0.85);
         box-shadow:
           inset 0 -1px 1px rgba(#fff, 0.2),
           0 1px 3px rgba(#000, 0.24),
           0 1px 1px rgba(#000, 0.12);
//         margin-bottom: 4px;
      }

       .keyboard {
         background-color: rgba(#000, 0.65);
         box-shadow:
           0 0 2px rgba(#fff, 0.3),
           0 1px 0 rgba(#fff, 0.25);
         color: #fff;
         text-shadow: none;
      }
    }
  }

  menubar &,
  & menubar {
    box-shadow: none;
    border: none;
    background: none;
    color: white;
  }

  popover {
    padding: 2px 4px;

    button {
      border-color: transparent;
      background-color: transparent;
      box-shadow: none;
      &:hover { @include button(flat-hover); }
      &:active { @include button(flat-active); label { color: white; } }
      &:checked { @include button(flat-checked); label { color: white; } }
      &:disabled { @include button(flat-insensitive); }
      &, &:hover, &:active, &:checked, &:disabled { border-color: transparent; }
    }

    .linked > button {
      color: $fg_color;
      background-color: $button_bg;
      border-color: $borders_color;
      @if $variant=='light' { box-shadow: $shadow_3, inset 0 0 0 1px rgba($borders_color, 0.01); }
      &:hover { @include button(hover); }
      &:active, &:checked { @include button(active); }
    }

    separator.horizontal {
      margin: 0 -4px;
    }

    separator.vertical {
      background: none;
    }

    .sidebar {
      border-style: none;
      background: none;

      .view {

        &:hover {
          border-radius: $bt_radius;
          background-color: if($variant=='light', rgba(black, 0.1), rgba(white, 0.1));
        }

        &:selected {
          &, &:focus {
            text-shadow: none;
            transition: all 200ms $ease-out-quad;
            background-color: if($variant=='light', rgba(black, 0.65), rgba(white, 0.35));
            border-radius: $bt_radius;
          }
        }
      }
    }
  }
}

.composited-indicator {
  padding: 0 6px;

  > revealer label,
  > revealer image,
  > revealer spinner {
    color: #fff;
    font-weight: bold;
    text-shadow:
        0 0 2px rgba(#000, 0.3),
        0 1px 2px rgba(#000, 0.6);
    transition: all 200ms ease-in-out;
    -gtk-icon-shadow:
        0 0 2px rgba(#000, 0.3),
        0 1px 2px rgba(#000, 0.6);
  }

  .keyboard {
    background-color: #fff;
    border-radius: 2px;
    box-shadow:
        0 0 2px rgba(#000, 0.3),
        0 1px 2px rgba(#000, 0.6);
    color: #333;
    font-weight: 600;
    padding: 0 3px;
    text-shadow: none;
  }
}

